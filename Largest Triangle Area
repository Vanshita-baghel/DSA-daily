PROBLEM STATEMENT:
Given an array of points on the X-Y plane points where points[i] = [xi, yi], return the area of the largest triangle that can be formed by any three different points. Answers within 10-5 of the actual answer will be accepted.

SOLUTION:
                                                                                          TIME COMPLEXITY: O(N^3)
                                                                                          SPACE COMPLEXITY_: O(1)
class Solution {
    public double largestTriangleArea(int[][] points) {
        
        double maxArea= Double.MIN_VALUE;
        for(int i=0; i<points.length; i++){
            for(int j=i+1; j<points.length; j++){
                for(int k= j+1; k<points.length; k++){
                    int x1= points[i][0], y1= points[i][1], x2= points[j][0], y2= points[j][1], x3= points[k][0], y3= points[k][1];
                    double area= 0.5* Math.abs((x1*(y2-y3))+(x2*(y3-y1))+(x3*(y1-y2)));
                    maxArea= Math.max(area, maxArea);
                }
            }
        }   
        return maxArea;
    }
}
